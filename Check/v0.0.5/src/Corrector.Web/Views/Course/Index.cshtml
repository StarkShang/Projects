@{
    Layout = "_Section";
}

@using System.IO;
@using System.Collections.Generic;
@model Dictionary<string, Dictionary<string, string>>
@{ var dics = ViewBag.ViewModel as Dictionary<string, Dictionary<string, string>>; }
<div class="container">
    <div class="row">
        <div class="col-sm-9">
            <div>
                <p>第1题</p>
                <p>URL(Uniform Resource Locator:统一资源定位符)是互联网上标准资源的地址，互联网上的每个文件都有一个唯一的URL。但是在进行网络通信时，对于在URL中本身有特定含义的特殊字符，为了避免引起歧义，需要使用转义字符进行替换。例如，用谷歌搜索引擎搜索“C#”时，因为“#”的16进制ASCII码为23，所以在URL中被转义为%23。</p>
            </div>
            <div id="CodeArea" class="embed-responsive embed-responsive-16by9" style="height:400px;border:1px solid grey"></div>
        </div>
        <!-- File list -->
        <div class="col-sm-3">
            <div class="hidden-print hidden-xs affix" role="complementary">
                <ul class="nav">
                    @foreach (var projectName in dics.Keys) {
                        <li>
                            <div>
                                <label class="glyphicon glyphicon-folder-close"></label>
                                <label class="hidden-sm">@projectName</label>
                            </div>
                            <ul class="nav">
                                @foreach (var fileName in dics[projectName].Keys) {
                                    <li ondblclick="getFileContent('@projectName','@fileName')">
                                        <div>
                                            <label class="glyphicon-file"></label>
                                            <label class="hidden-sm">@fileName</label>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>


@section Script{
    <script src="~/lib/monaco-editor/min/vs/loader.js"></script>
    <script>
        var editor;
        require.config({ paths: { 'vs': './lib/monaco-editor/min/vs' } });
        require(['vs/editor/editor.main'], function () {
            editor = monaco.editor.create(document.getElementById('CodeArea'), {
                value: ['int main()', '{', '', '}'
                ].join('\n'),
                fontFamily: 'Source Code Pro',
                tabCompletion: true,
                theme: 'vs-dark',
                language: 'cpp'
            });
        })
    </script>
    <script>
        var values = @Html.Raw(Json.Serialize(Model));
        function getFileContent(projectName, fileName) {
            //alert(values[projectName][fileName]);
            editor.setValue(values[projectName][fileName]);
        }

    </script>
}
