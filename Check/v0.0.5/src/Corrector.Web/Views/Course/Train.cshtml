@{
    Layout = "_Section";
}

@using System.Collections.Generic;
@model Dictionary<string, Dictionary<string, string>>



<!-- 导航栏 -->
<nav class="navbar navbar-inverse" role="navigation">
<div class="container">
    <div class="navbar-header">
        <button class="navbar-toggle collapsed" type="button" data-toggle="collapse" data-target="#navbar">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand">@ViewBag.Title</a>
    </div>
    <div class="navbar-collapse collapse" id="navbar">
        <ul class="nav navbar-nav">
            <li><a class="glyphicon glyphicon-fire"></a></li>
            <li><a class="glyphicon glyphicon-play"></a></li>
            <li><a class="glyphicon glyphicon-trash"></a></li>
            <li><a class="glyphicon glyphicon-stats"></a></li>
        </ul>
    </div>
</div>
</nav>


<div class="container">
<div class="row">
<div class="col-sm-9">
    <div>
        <p>第1题</p>
        <p>URL(Uniform Resource Locator:统一资源定位符)是互联网上标准资源的地址，互联网上的每个文件都有一个唯一的URL。但是在进行网络通信时，对于在URL中本身有特定含义的特殊字符，为了避免引起歧义，需要使用转义字符进行替换。例如，用谷歌搜索引擎搜索“C#”时，因为“#”的16进制ASCII码为23，所以在URL中被转义为%23。</p>
    </div>
    <div id="CodeArea" class="embed-responsive embed-responsive-16by9" style="height:400px;border:1px solid grey"></div>
</div>
<!-- File list -->
<div class="col-sm-3">
<div class="panel panel-default">
    @foreach (var projectName in @Model.Keys)
    {
        <div class="panel-heading"><i class="fa fa-folder icon"></i>@projectName</div>
        <ul class="list-group">
        @foreach (var fileName in @Model[projectName].Keys)
        {
            <li class="list-group-item"
                ondblclick="getFileContent(this,'@projectName','@fileName')">
                <i class="fa fa-code icon"></i>
                @fileName
            </li>
        }
        </ul>
    }
</div>
</div>
</div>
</div>

@section Style{
<style type="text/css">
.icon {
    margin-left: 0em;
    margin-right: 0.5em;
}
</style>

}

@section Script{
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
<script src="~/lib/sjcl.js"></script>
<script src="~/lib/preLoader.js"></script>
<script src="~/lib/monaco-editor/min/vs/loader.js"></script>
<script>
    var editor = null;
    require.config({ paths: { 'vs': '../lib/monaco-editor/min/vs' } });
    require(['vs/editor/editor.main'], function () {
        editor = monaco.editor.create(document.getElementById('CodeArea'), {
            value: ['int main()', '{', '', '}'
            ].join('\n'),
            fontFamily: 'Source Code Pro',
            tabCompletion: true,
            theme: 'vs-dark',
            language: 'cpp'
        });
    })
</script>
<script>
    var values = @Html.Raw(Json.Serialize(Model));

    var currentElement = null;
    function getFileContent(element, projectName, fileName) {
        if (element == currentElement) { return; }
        else if (currentElement != null && element != currentElement) {
            currentElement.childNodes[1].className = "fa fa-code icon";
        }
        currentElement = element;
        currentElement.childNodes[1].className = "fa fa-spinner fa-spin icon";
        editor.setValue(values[projectName][fileName]);
    }

</script>
}
