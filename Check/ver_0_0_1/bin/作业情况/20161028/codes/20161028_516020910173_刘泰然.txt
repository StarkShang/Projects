20161028_516020910173_刘泰然
L01
func3.cpp
/*
 * 计算目标值的索引
 * 输入 : target 目标值
 * 输入 : nums 输入数据数组
 * 输入 : len 输入数组长度
 * 输出 : 若输入数组中存在该目标值，则返回目标值的索引
 *		  若输入数组中不存在该目标值，则返回-1
 */


int func3(float target, float* nums, int len)
{
	int i,high,low;
	low=0;
	high=len-1;
	for(i=0;i<=high;i++)//控制比较次数
	{
		int mid=(high+low)/2;//进行二分
		if(target==nums[0])//若在两头，直接输出
		{
			mid=1;
			return mid;
		}
		if(target==nums[high])
		{
			mid=len;
			return mid;
		}
		if(target<nums[mid])//若目标值比中值小
		{
			low=mid;//下界等于中点
		}
		if(target>nums[mid])//若目标值比中值大
		{
			high=mid;//上界等于中点
		}
		if(target==nums[mid])
		{
			return mid+1;//找出对应数，输出所在位置
		}
	}
	return -1;
}
main.cpp
#include <iostream>
extern int func3(float target, float* nums, int len);
int main(int argc, char* argv[])
{
	float nums[50];
	int len;
	std::cout << "Please input the number of numbers: ";
	std::cin >> len;
	std::cout << "Please input the numbers: ";
	for (int i = 0; i < len; i++)
	{
		std::cin >> nums[i];
	}
	float target;
	std::cout << "Please input a number you want to find: ";
	std::cin >> target;
	int index = func3(target, nums, len);
	if (-1 == index)
		std::cout << "There is no such number in the group!" << std::endl;
	else
		std::cout << "The index of the number is: " << index << std::endl;
	
	return 0;
}
L02
func_.cpp
struct Point
{
	float x;
	float y;
};

struct Point func__()
{
	Point centroid ;
	Point t[3]={{3,4},{1,1},{8,-1}};//���������
    centroid.x=(t[0].x+t[1].x+t[2].x)/3;//�����ʵ�
    centroid.y=(t[0].y+t[1].y+t[2].y)/3;//�����ʵ�
	return centroid;//�����ʵ�ֵ
}

main.cpp
#include <iostream>
struct Point
{
	float x;
	float y;
};
extern struct Point func__();
int main(int argc, char* argv[])
{
	auto centroid = func__();
	std::cout << "The centroid is (" << centroid.x << "," << centroid.y << ")" << std::endl;
	return 0;
}
L03
func3.cpp
/********************************
 * 计算给定日期是该年的第几天
 * 输入 : year 年份
 * 输入 : month 月份
 * 输入 : day 天
 * 输出 : 给定日期是该年的第几天
 ********************************/
int func3(int year, int month, int day)
{
	int b,i,c;//定义变量
	if((year%4==0&&year%100!=0)||year%400==0)//判断是否为闰年
	{
		int m[13]={0,31,29,31,30,31,30,31,31,30,31,30,31};//输入每月天数
		c=0;
		for(i=0;i<=month-1;i++)//计算之前月份天数
		{
			c=c+m[i];
		}
		b=c+day;//加上本月天数
	}
	else
	{
		int m[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};
		c=0;
		for(i=0;i<=month-1;i++)
		{
			c=c+m[i];
		}
		b=c+day;
	}
	return b;
}
main.cpp
#include <iostream>
extern int func3(int year, int month, int day);
int main(int argc, char* argv[])
{
	int year, month, day;
	std::cout << "Please input year: ";
	std::cin >> year;
	std::cout << "Please input month: ";
	std::cin >> month;
	std::cout << "Please input day: ";
	std::cin >> day;
	int num = func3(year, month, day);
	std::cout << year << "-" << month << "-" << day << " is the " << num;
	switch (num)
	{
		case 1: std::cout << "st "; break;
		case 2: std::cout << "nd "; break;
		case 3: std::cout << "rd "; break;
		default : std::cout << "th ";
	}
	std::cout << "day in the year!" << std::endl;
}
