20161104_516020910187_汪震
L01
func17.cpp
/*****************************
 * 栈数据结构的定义
 *****************************/
struct Stack
{
	int _elements[1024];
	const int capacity;
	int count;
}
;
/*****************************
 * 入栈操作
 * 输入 : stack要处理的栈结构
 * 输入 : in要入栈的数
 * 输出 : 状态码
 *****************************/
int push(struct Stack& stack, int in)
{
	if (stack.count >= stack.capacity)
	{
		return -1;
	}
	else
	{
		stack.count++;
		stack._elements[stack.count] = in;
		return 0;
	}
}

/*****************************
 * 出栈操作
 * 输入 : stack要处理的栈结构
 * 输出 : out出栈结果
 * 输出 : 状态码
 *****************************/
int pop(struct Stack& stack, int& out)
{
	if (stack.count == 0)
	{
		return -1;
	}
	else
	{
		out = stack._elements[stack.count];
		stack.count--;
		return 0;
	}
}

L02
func17.cpp
/**********************************

 * �ַ����滻����
 * ���� : strҪ�����滻�������ַ���
 * ���� : len�����ַ�������
 * ��� : ״̬��
 **********************************/
int substitute(char* str, int len)
{
	char sqechars[10] = { ' ','"','#','%','&','(',')','/',':','@' };
	char a[10][4] = {"%20","%22","%23","%25","%26","%28","%29","%2F","%3A","%40" };//16����ASCII������
	for (int i = 0; i < len; i++)
	{
		for (int j = 0; j < 10; j++)
		{
			if (sqechars[j] == str[i])
			{
				len = len + 2;
				for (int n=len-2-i;n>=1;n--)
				{
					str[i+n+1] = str[i+n-1];
				}
				str[i] = a[j][0];
				str[i + 1] = a[j][1];
				str[i + 2] = a[j][2];
				break;
			}
		}
	}
	if (len > 1024)
	{
		return -1;
	}
	else
	{
		return 0;
	}
}
L04
func17.cpp
/**********************************
 * 插入排序函数
 * 输入 : nums要进行排序操作的数组
 * 输入 : len输入数组长度
 **********************************/
void insertSort(float* nums, int len)
{
	float a;
	for (int i = 1; i < len; i++)
	{
		for (int j = i; j > 0; j--)
		{
			if (nums[j] <= nums[j - 1])
			{
				a = nums[j];
				nums[j] = nums[j - 1];
				nums[j - 1] = a;
			}
		}
	}
}
