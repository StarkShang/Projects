20161104_516020910183_邱蒙泽
L01
func13.cpp
/*****************************
 * 栈数据结构的定义
 *****************************/
struct Stack//定义结构体及其中各变量
{//
	int elements[1024];//
	const int capacity=1024;//
	int count=0;//
};//

/*****************************
 * 入栈操作
 * 输入 : stack要处理的栈结构
 * 输入 : in要入栈的数
 * 输出 : 状态码
 *****************************/
int push(struct Stack& stack, int in)//定义入栈函数
{//
	if (stack.count < stack.capacity)//判定可入栈
	{//
		stack.elements[stack.count]= in;//添加入栈的变量
		stack.count ++;//已入栈数加一
		return 0;//返回0
	}//
	else return(-1);//不可入栈时返回-1
}//

/*****************************
 * 出栈操作
 * 输入 : stack要处理的栈结构
 * 输出 : out出栈结果
 * 输出 : 状态码
 *****************************/
int pop(struct Stack& stack, int& out)//定义出栈函数
{//
	if (stack.count > 0)//判断是否可出栈
	{//
		out=stack.elements [stack.count-1];//把要出栈的数赋值给out
		stack.count = stack.count - 1;//已入栈数减一
	
		return 0;//返回0
	}//
	else return(-1);//不可出栈时返回-1
}
L02
func13.cpp
/**********************************
 * �ַ����滻����
 * ���� : strҪ�����滻�������ַ���
 * ���� : len�����ַ�������
 * ��� : ״̬��
 **********************************/
char spechars[10] = {' ','"','#','%','&','(',')','/',':','@'};//��������
char a[10][4] = {"%20","%22","%23","%25","%26","%28","%29","%2F","%3A","%40" };//�������ֵ������
int substitute(char* str, int len)//
{//
	if (len <= 1024)//�ж������Ƿ����
	{//
		int i, m,j;//�������
		for (i = 0; i < 1024; i++)//��ʼѭ���������ַ���������
		{//
			for (j = 0; j <= 9; j++)//��spechars���������αȽ�
			{//
				if (str[i] == spechars[j])//��ȶԳɹ�
				{//
					for (m = len - 1;m>i;m--)//������������ַ���ǰ������i���ַ�
					{//
						str[m + 2] = str[m];//�ⲿ���ַ��������2���ַ�
					}//
					str[i] = a[j][0];//
					str[i + 1] = a[j][1];//
					str[i + 2] = a[j][2]; break;//���Ĳ�break
				}//
			}//
		}//
		return 0;//����0
	}//
	else return(-1);//���������-1
}//
L04
func13.cpp
/**********************************
 * 插入排序函数
 * 输入 : nums要进行排序操作的数组
 * 输入 : len输入数组长度
 **********************************/
void insertSort(float* nums, int len)//
{//
	int i,j;//定义变量
	float k;//定义中间变量k
	for (i = 1; i < len; i++)//从第二个数开始循环
	{//
		j = i;//用j表示i
		if (nums[j] < nums[j - 1])//若需要更改这一项的位置
		{//
			do {//
				j = j - 1;//
			} while (nums[j] > nums[j - 1]);//判断这一项要提前到的位置
			k = nums[i];//用中间变量k表示这一项
			do {//
				nums[i] = nums[i - 1];//
				i = i - 1;//
			} while (i > j);//从应到的位置到这一项的所有数向后推一个单位
			nums[j] = k;//这个位置改为这一项
		}//
	}//
}//
