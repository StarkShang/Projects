20161028_516020910185_舒轶
L01
func_.cpp
/*
 * 计算目标值的索引
 * 输入 : target 目标值
 * 输入 : nums 输入数据数组
 * 输入 : len 输入数组长度
 * 输出 : 若输入数组中存在该目标值，则返回目标值的索引
 *		  若输入数组中不存在该目标值，则返回-1
 */
int func15(float target, float* nums, int len)//
{//
	int i=0;//定义i
	do {//
		i++;//
		if (nums[i] == target); break;//循环至有相等的数
	} while (i <=len);//
	if (i < len)//若有相等的数，提前break
	return i;//
	if (i = len)//若没有相等的数，返回-1
    return (-1);//
}
main.cpp
#include <iostream>
extern int func__(float target, float* nums, int len);
int main(int argc, char* argv[])
{
	float nums[50];
	int count = 0;
	std::cout << "Please input the number of numbers: ";
	std::cin >> count;
	std::cout << "Please input the numbers: ";
	for (int i = 0; i < count; i++)
	{
		std::cin >> nums[i];
	}
	float target;
	std::cout << "Please input a number you want to find: ";
	std::cin >> target;
	int index = func__(target, nums, count);
	if (-1 == index)
		std::cout << "There is no such number in the group!" << std::endl;
	else
		std::cout << "The index of the number is: " << index << std::endl;
	
	return 0;
}
L02
func_.cpp
struct Point
{
	float x;
	float y;//���������
};

struct Point func15()
{
	Point P1, P2, P3;
	P1.x = 3;
	P1.y = 4;
	P2.x = 1;
	P2.y = 1;
	P3.x = 8;
	P3.y = -1;//��������������������
	Point P4;
	P4.x = (P1.x + P2.x + P3.x) / 3;
	P4.y = (P1.y + P2.y + P3.y) / 3;//���빫ʽ����ֱ������
	return P4;//����ֱ������
}
main.cpp
#include <iostream>
struct Point
{
	float x;
	float y;
};
extern struct Point func__();
int main(int argc, char* argv[])
{
	auto centroid = func__();
	std::cout << "The centroid is (" << centroid.x << "," << centroid.y << ")" << std::endl;
	return 0;
}
L03
func__.cpp
/********************************
 * 计算给定日期是该年的第几天
 * 输入 : year 年份
 * 输入 : month 月份
 * 输入 : day 天
 * 输出 : 给定日期是该年的第几天
 ********************************/
int func15(int year, int month, int day)
{
	if ((year % 100 != 0 && year % 4 == 0) || year % 400 == 0)//判断为闰年
	{//
		int a[12] = { 0,31,29,31,30,31,30,31,31,30,31,30 },i=0,s=0;//定义12个月天数的数组
		do {//
			s = s + a[i];//
			i++;//
		} while (i < month);//计算次月前所有月份天数和
		return(s + day);//返回时加上这个月的天数
	}//
	else//判断非闰年
	{//
		int a[12] = { 0,31,28,31,30,31,30,31,31,30,31,30 }, i = 0, s = 0;//定义12个月天数的数组
		do {//
			s = s + a[i];//
			i++;//
		} while (i < month);//计算次月前所有月份天数和
		return(s + day);//返回时加上这个月的天数
	}//
}//
main.cpp
#include <iostream>
extern int func__(int year, int month, int day);
int main(int argc, char* argv[])
{
	int year, month, day;
	std::cout << "Please input year: ";
	std::cin >> year;
	std::cout << "Please input month: ";
	std::cin >> month;
	std::cout << "Please input day: ";
	std::cin >> day;
	int num = func__(year, month, day);
	std::cout << year << "-" << month << "-" << day << " is the " << num;
	switch (num)
	{
		case 1: std::cout << "st "; break;
		case 2: std::cout << "nd "; break;
		case 3: std::cout << "rd "; break;
		default : std::cout << "th ";
	}
	std::cout << "day in the year!" << std::endl;
}
