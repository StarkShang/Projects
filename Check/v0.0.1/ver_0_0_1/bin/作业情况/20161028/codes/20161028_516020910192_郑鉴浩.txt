20161028_516020910192_郑鉴浩
L01
func_.cpp
/*
 * 计算目标值的索引
 * 输入 : target 目标值
 * 输入 : nums 输入数据数组
 * 输入 : len 输入数组长度
 * 输出 : 若输入数组中存在该目标值，则返回目标值的索引
 *		  若输入数组中不存在该目标值，则返回-1
 */
int func__(float target, float* nums, int len)//定义索引函数
{
	int i=0,t=-1;
	for(i=0;i<len;i++)//设置循环查找目标
	{if (nums[i]==target)
	{
	  t=i;//赋值所求目标的序号
	  break;
	}
	}
	return (t);//返回结果

	
}
main.cpp
#include <iostream>
extern int func__(float target, float* nums, int len);
int main(int argc, char* argv[])
{
	float nums[50];
	int count = 0;
	std::cout << "Please input the number of numbers: ";
	std::cin >> count;
	std::cout << "Please input the numbers: ";
	for (int i = 0; i < count; i++)
	{
		std::cin >> nums[i];
	}
	float target;
	std::cout << "Please input a number you want to find: ";
	std::cin >> target;
	int index = func__(target, nums, count);
	if (-1 == index)
		std::cout << "There is no such number in the group!" << std::endl;
	else
		std::cout << "The index of the number is: " << index << std::endl;
	
	return 0;
}
L02
func_.cpp
struct Point//�����ṹ
{
	float x;
	float y;
};

struct Point func__()
{
	Point p1,p2,p3,p4;//�����������������㼰�����
	p1.x=3;//����������
	p1.y=4;
	p2.x=1;
	p2.y=1;
	p3.x=8;
	p3.y=-1;
	p4.x=(p1.x+p2.x+p3.x)/3;//������������
	p4.y=(p1.y+p2.y+p3.y)/3;
	return p4;//��������ֵ
}
main.cpp
#include <iostream>
struct Point
{
	float x;
	float y;
};
extern struct Point func__();
int main(int argc, char* argv[])
{
	auto centroid = func__();
	std::cout << "The centroid is (" << centroid.x << "," << centroid.y << ")" << std::endl;
	return 0;
}
L03
func__.cpp
/********************************
 * 计算给定日期是该年的第几天
 * 输入 : year 年份
 * 输入 : month 月份
 * 输入 : day 天
 * 输出 : 给定日期是该年的第几天
 ********************************/
int func__(int year, int month, int day)
{
	if ((year % 100 != 0 && year % 4 == 0) || year % 400 == 0)//判断为闰年
	{
		int d[12]={0,31,29,31,30,31,30,31,31,30,31,30};//输入闰年每月所需添加的数组
	    int i,sum=0;
	    for (i=0;i<month;i++)//设置循环添加天数
	    {
		    sum=sum+d[i];
		}
		return  (sum+day);//返回结果
	}
	else
	{
		int d[12]={0,31,28,31,30,31,30,31,31,30,31,30};//输入非闰年每月所需添加的数组
	    int i,sum=0;
	    for (i=0;i<month;i++)//设置循环添加天数
	    {
		    sum=sum+d[i];
		}
		return  (sum+day);//返回结果
	}
}
main.cpp
#include <iostream>
extern int func__(int year, int month, int day);
int main(int argc, char* argv[])
{
	int year, month, day;
	std::cout << "Please input year: ";
	std::cin >> year;
	std::cout << "Please input month: ";
	std::cin >> month;
	std::cout << "Please input day: ";
	std::cin >> day;
	int num = func__(year, month, day);
	std::cout << year << "-" << month << "-" << day << " is the " << num;
	switch (num)
	{
		case 1: std::cout << "st "; break;
		case 2: std::cout << "nd "; break;
		case 3: std::cout << "rd "; break;
		default : std::cout << "th ";
	}
	std::cout << "day in the year!" << std::endl;
}
